{"version":3,"sources":["logo.svg","actions/constants.js","Reducer.js","pages/Home.js","components/Nav.js","components/Notification.js","pages/Layout.js","environment/environment.js","actions/book-actions.js","components/Listing.js","actions/genre-actions.js","components/BookForm.js","components/FilterGenres.js","pages/Books.js","components/GenreForm.js","pages/Genres.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","SET_BOOKS","SET_SINGLE_BOOK","CREATE_BOOK","DELETE_BOOK","UPDATE_BOOK","SET_GENRES","SET_SINGLE_GENRE","DELETE_GENRE","CREATE_GENRE","UPDATE_GENRE","combineReducers","books","state","arguments","length","undefined","action","type","Object","toConsumableArray","data","genres","Home","react_default","a","createElement","className","Component","Nav","handleItemClick","e","_ref","name","_this","setState","activeItem","this","Menu","stackable","Item","src","logo","alt","width","height","active","onClick","as","Link","to","PortalExamplePortal","log","logCount","open","handleClose","Portal","props","openNotification","onClose","Segment","style","left","position","top","zIndex","Header","contentNotification","Layout","navVisible","navVisibility","Notification_PortalExamplePortal","messageOpen","messageContent","components_Nav","Container","children","environment","host","handleResponse","_callee","response","error","regenerator_default","wrap","_context","prev","next","ok","abrupt","json","Error","statusText","stop","Listing","thead","handleEdit","handleDelete","Table","celled","Row","map","text","HeaderCell","key","shortid","generate","Body","book","Cell","toLowerCase","Button","id","primary","color","Footer","colSpan","floated","pagination","icon","Icon","setgenres","genreCreated","fetchGenresApi","dispatch","fetch","concat","method","headers","Content-Type","then","buttonDefaultStyles","backgroundColor","border","cursor","outline","BookForm","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","value","matchGenre","bookData","assign","defineProperty","handleSubmit","editBookId","updateBook","console","modalOpen","messageText","createBook","title","prevProps","emptyForm","author","country","genre","year","publisher","isbn","edition","price","_this2","addNewButton","Transition","duration","Modal","trigger","closeIcon","content","composeTitle","Content","Form","onSubmit","Field","Input","autoFocus","placeholder","onChange","Dropdown","search","selection","options","Actions","form","connect","ownProps","textNotification","body","JSON","stringify","bookCreated","fetchBookApi","setSingleBook","bookUpdated","FilterGenres","componentDidMount","updateListing","Books","fetchBooksApi","deleteBook","res","bind","assertThisInitialized","resetFilter","filteredBooks","filter","Loader","inline","editBook","findIndex","x","components_BookForm","components_FilterGenres","components_Listing","setbooks","bookDeleted","GenreForm","target","genreData","updateGenre","createGenre","editGenreId","fetchGenreApi","Genres","deleteGenre","editGenre","components_GenreForm","genreDeleted","store","createStore","Reducer","composeWithDevTools","applyMiddleware","thunk","App","notify","status","es","BrowserRouter","Switch","pages_Layout","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7bc66dfc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export const SET_BOOKS  = 'SET_BOOKS';\r\nexport const SET_SINGLE_BOOK  = 'SET_SINGLE_BOOK';\r\nexport const CREATE_BOOK = 'CREATE_BOOK';\r\nexport const DELETE_BOOK = 'DELETE_BOOK';\r\nexport const UPDATE_BOOK = 'UPDATE_BOOK';\r\n\r\nexport const SET_GENRES  = 'SET_GENRES';\r\nexport const SET_SINGLE_GENRE  = 'SET_SINGLE_GENRE';\r\nexport const DELETE_GENRE = 'DELETE_GENRE';\r\nexport const CREATE_GENRE = 'CREATE_GENRE';\r\nexport const UPDATE_GENRE = 'UPDATE_GENRE';","/* eslint-disable */\r\n\r\nimport { combineReducers } from 'redux';\r\n\r\nimport { SET_SINGLE_BOOK, SET_BOOKS, SET_SINGLE_GENRE, SET_GENRES, DELETE_BOOK, DELETE_GENRE, UPDATE_BOOK, UPDATE_GENRE } from './actions/constants';\r\n\r\nfunction books(state = [], action = {}) {\r\n    switch (action.type) {\r\n        case SET_BOOKS:\r\n            const combined = [...action.data];\r\n            return combined;\r\n        case SET_SINGLE_BOOK:\r\n            return state;\r\n        case DELETE_BOOK:\r\n            return [...state];\r\n        case UPDATE_BOOK:\r\n            return [...state];\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst genres = (state = [], action = {}) => {\r\n    switch (action.type) {\r\n        case SET_GENRES:\r\n            const combined = [...action.data];\r\n            return combined;\r\n        case SET_SINGLE_GENRE:\r\n            return state;\r\n        case DELETE_GENRE:\r\n            return [...state];\r\n        case UPDATE_GENRE:\r\n            return [...state];\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default combineReducers({ books, genres });\r\n\r\n","/* eslint-disable */\r\n\r\nimport React, { Component } from 'react';\r\nimport { Field, Button, Checkbox, Form, Input, Radio, Select, TextArea, Header } from 'semantic-ui-react';\r\n\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nexport default class Home extends Component {\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"home\">\r\n        <h1>This is Home</h1>\r\n        <p>\r\n            Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor.\r\n            Aenean massa strong. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur\r\n            ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla\r\n            consequat massa quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget, arcu.\r\n            In enim justo, rhoncus ut, imperdiet a, venenatis vitae, justo. Nullam dictum felis eu pede\r\n            link mollis pretium. Integer tincidunt. Cras dapibus. Vivamus elementum semper nisi. Aenean\r\n            vulputate eleifend tellus. Aenean leo ligula, porttitor eu, consequat vitae, eleifend ac,\r\n            enim. Aliquam lorem ante, dapibus in, viverra quis, feugiat a, tellus. Phasellus viverra nulla\r\n            ut metus varius laoreet. Quisque rutrum. Aenean imperdiet. Etiam ultricies nisi vel augue.\r\n            Curabitur ullamcorper ultricies nisi.\r\n          </p>\r\n          <h3>Características de este proyecto</h3>\r\n          <p>Concepto de \"componetización funcional\":</p>\r\n          <ul>\r\n            <li>Maximización del uso de la componetización (siempre que se pueda, componetizar, aunque en el futuro haya que refactorizar)</li>\r\n            <li>Seguimiento de una logica funcional: Componentes presentacionales y componentes contenedores (e.g. Listing)</li>\r\n            <li>Inmutabilidad, sobre todo en gestión de estados. Evitando el uso de herencia (inheritace) con las clases (difícil para alguien acostumbrado al concepto de OOP de Angular por ejemplo)</li>\r\n            <li>No es necesario utilizar Redux en un proyecto como este, pero lo he metido por escabilidad</li>\r\n            <li>Código simple, en caso de añadir nuevas feature, siempre crear nuevos HOC o simplemente funciones puras (return nextProp)</li>\r\n            \r\n          </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/* eslint-disable */\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Menu } from 'semantic-ui-react';\r\n\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport logo from '../logo.svg';\r\n\r\nclass Nav extends Component {\r\n\r\n    state = {}\r\n    handleItemClick = (e, { name }) => this.setState({ activeItem: name })\r\n\r\n    render() {\r\n        const { activeItem } = this.state\r\n\r\n        return (\r\n            <Menu stackable>\r\n                \r\n                <Menu.Item>\r\n                    <img className=\"App-logo\" src={logo} alt=\"BeezyBook\" width=\"200\" height=\"200\" />\r\n                </Menu.Item>\r\n                <Menu.Item name='home' active={activeItem === 'home'} onClick={this.handleItemClick} as={Link} to='/'>\r\n                    HOME\r\n                </Menu.Item>\r\n                <Menu.Item name='library' active={activeItem === 'library'} onClick={this.handleItemClick} as={Link} to='/library'>\r\n                    BOOKS\r\n                </Menu.Item>\r\n                <Menu.Item name='genres' active={activeItem === 'genres'} onClick={this.handleItemClick} as={Link} to='/genres'>\r\n                    GENRES\r\n                </Menu.Item>\r\n            </Menu>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Nav;","import React, { Component } from 'react'\r\nimport { Header, Segment, Portal } from 'semantic-ui-react'\r\n\r\nexport default class PortalExamplePortal extends Component {\r\n    state = {\r\n        log: [],\r\n        logCount: 0,\r\n        open: false,\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Portal open={this.props.openNotification} onClose={this.handleClose} >\r\n                <Segment style={{ left: '40%', position: 'fixed', top: '50%', zIndex: 1000 }}>\r\n                    <Header>Hello!</Header>\r\n                    <p>{this.props.contentNotification}</p>\r\n                </Segment>\r\n            </Portal>\r\n        )\r\n    }\r\n}","/* eslint-disable */\r\n\r\nimport React, { Component } from 'react';\r\nimport { Container } from 'semantic-ui-react';\r\nimport Nav from '../components/Nav';\r\nimport Notification from '../components/Notification';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\n\r\nclass Layout extends Component {\r\n\r\n  state = {\r\n    navVisible: true,\r\n  }\r\n\r\n  navVisibility = () => {\r\n    this.setState({ navVisible: !this.state.navVisible })\r\n  }\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <div className=\"layout\">\r\n          <Notification messageOpen={this.props.messageOpen} messageContent={this.props.messageContent}></Notification>\r\n          <Nav />\r\n        <Container>\r\n          {this.props.children}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (s, p) => {\r\n  const newObj = Object.assign({}, p, s)\r\n  return newObj\r\n}\r\n\r\nexport default Layout;\r\n","export const environment = {\r\n        host: `http://localhost:4000`,\r\n    \r\n}","/* eslint-disable */\r\nimport { environment } from '../environment/environment';\r\nimport { DELETE_BOOK, CREATE_BOOK, SET_BOOKS, SET_SINGLE_BOOK, UPDATE_BOOK } from './constants';\r\n\r\nasync function handleResponse (response) {\r\n    if (response.ok) {\r\n        return response.json();\r\n    } else {\r\n        let error = new Error(response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport function bookCreated (data) {\r\n    return {\r\n        type: CREATE_BOOK,\r\n        data\r\n    }\r\n}\r\n\r\nexport function bookUpdated (data) {\r\n    return {\r\n        type: UPDATE_BOOK,\r\n        data\r\n    }\r\n}\r\n\r\nexport function setbooks(data) {\r\n    return {\r\n        type: SET_BOOKS,\r\n        data\r\n    }\r\n}\r\n\r\nexport function setSingleBook(data) {\r\n    return {\r\n        type: SET_SINGLE_BOOK,\r\n        data\r\n    }\r\n}\r\n\r\nexport function bookDeleted(id) {\r\n    return {\r\n        type: DELETE_BOOK,\r\n        id\r\n    }\r\n}\r\n\r\nexport function deleteBook(id) {\r\n    return dispatch => {\r\n        return fetch(`${environment.host}/books/${id}`, {\r\n           method: 'delete',\r\n           headers: {\r\n               \"Content-Type\" : \"application/json\"\r\n           }\r\n        }) \r\n        .then(handleResponse)\r\n        .then(data => dispatch(bookDeleted(id)));   \r\n    }\r\n}\r\n\r\nexport function createBook(data) {\r\n    return dispatch => {\r\n        return fetch(`${environment.host}/books`, {\r\n           method: 'post',\r\n           body: JSON.stringify(data),\r\n           headers: {\r\n               \"Content-Type\" : \"application/json\",\r\n           }\r\n        })\r\n        .then(handleResponse).then(data => dispatch(bookCreated(data)));   \r\n        \r\n    }\r\n}\r\n\r\nexport function fetchBooksApi() {\r\n    return dispatch => {\r\n        fetch(`${environment.host}/books`, {\r\n            method:'GET',\r\n            headers : { \r\n            \"Content-Type\": \"application/json\",\r\n           },\r\n        })\r\n        .then(handleResponse)\r\n        .then(data => dispatch(setbooks(data)))\r\n    }\r\n}\r\n\r\nexport function fetchBookApi(id) {\r\n    return dispatch => {\r\n        fetch(`${environment.host}/books/${id}`, {\r\n            method:'GET',\r\n            headers : { \r\n            \"Content-Type\": \"application/json\",\r\n           },\r\n        })\r\n        .then(handleResponse)\r\n        .then(data => dispatch(setSingleBook(data)))\r\n    }\r\n}\r\n\r\nexport function updateBook(data) {\r\n    return dispatch => {\r\n        return fetch(`${environment.host}/books/${data.id}`, {\r\n           method: 'put',\r\n           body: JSON.stringify(data),\r\n           headers: {\r\n               \"Content-Type\" : \"application/json\",\r\n           }\r\n        })\r\n        .then(handleResponse).then(data => dispatch(bookUpdated(data)));   \r\n        \r\n    }\r\n}","/* eslint-disable */\r\n\r\nimport React, { Component } from 'react';\r\nimport { Menu, Table, Icon, Loader, Button } from 'semantic-ui-react';\r\nimport shortid from 'shortid';\r\n\r\nconst Listing = ({ thead, data, handleEdit, handleDelete }) => {\r\n    return (\r\n        <Table celled>\r\n            <Table.Header>\r\n                <Table.Row>\r\n                    {thead.map(text =>\r\n                        <Table.HeaderCell key={shortid.generate()}>{text}</Table.HeaderCell>\r\n                    )}\r\n\r\n                </Table.Row>\r\n            </Table.Header>\r\n\r\n            <Table.Body>\r\n                {data.map(book =>\r\n                    <Table.Row key={shortid.generate()}>\r\n                        {thead.map(text =>\r\n                            <Table.Cell key={shortid.generate()}>\r\n                            {book[text.toLowerCase()]}</Table.Cell>\r\n                        )}\r\n                        <Table.Cell>\r\n                            <Button onClick={() => handleEdit(book.id)} primary>Edit</Button>\r\n                            <Button onClick={() => handleDelete(book.id)} color=\"red\">Delete</Button>\r\n                        </Table.Cell>\r\n                    </Table.Row>\r\n                )}\r\n            </Table.Body>\r\n\r\n            <Table.Footer>\r\n                <Table.Row>\r\n                    <Table.HeaderCell colSpan='3'>\r\n                        <Menu floated='right' pagination>\r\n                            <Menu.Item as='a' icon>\r\n                                <Icon name='chevron left' />\r\n                            </Menu.Item>\r\n                            <Menu.Item as='a'>1</Menu.Item>\r\n                            <Menu.Item as='a'>2</Menu.Item>\r\n                            <Menu.Item as='a'>3</Menu.Item>\r\n                            <Menu.Item as='a'>4</Menu.Item>\r\n                            <Menu.Item as='a' icon>\r\n                                <Icon name='chevron right' />\r\n                            </Menu.Item>\r\n                        </Menu>\r\n                    </Table.HeaderCell>\r\n                </Table.Row>\r\n            </Table.Footer>\r\n        </Table>\r\n    )\r\n}\r\nexport default Listing;\r\n// export default connect(mapStateToProps, { createBook, fetchBooksApi, deleteCV, copyCV })(Listing);\r\n","/* eslint-disable */\r\nimport { environment } from '../environment/environment';\r\nimport { SET_GENRES, SET_SINGLE_GENRE, CREATE_GENRE, DELETE_GENRE, UPDATE_GENRE } from './constants';\r\n\r\n\r\nfunction handleResponse (response) {\r\n    if (response.ok) {\r\n        return response.json();\r\n    } else {\r\n        let error = new Error(response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport function genreUpdated(data) {\r\n    return {\r\n        type: UPDATE_GENRE,\r\n        data\r\n    }\r\n}\r\n\r\nexport function setgenres(data) {\r\n    return {\r\n        type: SET_GENRES,\r\n        data\r\n    }\r\n}\r\n\r\nexport function setSingleBook(data) {\r\n    return {\r\n        type: SET_SINGLE_GENRE,\r\n        data\r\n    }\r\n}\r\n\r\nexport function genreDeleted(id) {\r\n    return {\r\n        type: DELETE_GENRE,\r\n        id\r\n    }\r\n}\r\n\r\nexport function genreCreated(data) {\r\n    return {\r\n        type: CREATE_GENRE,\r\n        data\r\n    }\r\n}\r\n\r\nexport function deleteGenre(id) {\r\n    return dispatch => {\r\n        return fetch(`${environment.host}/genres/${id}`, {\r\n           method: 'delete',\r\n           headers: {\r\n               \"Content-Type\" : \"application/json\"\r\n           }\r\n        }) \r\n        .then(handleResponse)\r\n        .then(data => dispatch(genreDeleted(id)));   \r\n    }\r\n}\r\n\r\nexport function createGenre(data) {\r\n    return dispatch => {\r\n        return fetch(`${environment.host}/genres`, {\r\n           method: 'post',\r\n           body: JSON.stringify(data),\r\n           headers: {\r\n               \"Content-Type\" : \"application/json\",\r\n           }\r\n        })\r\n        .then(handleResponse).then(data => dispatch(genreCreated(data)));   \r\n        \r\n    }\r\n}\r\n\r\nexport function fetchGenresApi() {\r\n    return dispatch => {\r\n        fetch(`${environment.host}/genres`, {\r\n            method:'GET',\r\n            headers : { \r\n            \"Content-Type\": \"application/json\",\r\n           },\r\n        })\r\n        .then(handleResponse)\r\n        .then(data => {\r\n            dispatch(setgenres(data));\r\n        })\r\n    }\r\n}\r\n\r\nexport function fetchGenreApi(id) {\r\n    return dispatch => {\r\n        fetch(`${environment.host}/genres/${id}`)\r\n        .then(handleResponse)\r\n        .then(data => dispatch(setgenres(data)))\r\n    }\r\n}\r\n\r\nexport function updateGenre(data) {\r\n    return dispatch => {\r\n        return fetch(`${environment.host}/genres/${data.id}`, {\r\n           method: 'put',\r\n           body: JSON.stringify(data),\r\n           headers: {\r\n               \"Content-Type\" : \"application/json\",\r\n           }\r\n        })\r\n        .then(handleResponse).then(data => dispatch(genreCreated(data)));   \r\n        \r\n    }\r\n}","/* eslint-disable */\r\n\r\nimport React, { Component } from 'react';\r\nimport { Modal, Header, Button, Icon, Transition, Form, Input, Dropdown } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport shortid from 'shortid';\r\nimport PropTypes from 'prop-types';\r\nimport { createBook, fetchBookApi, updateBook } from '../actions/book-actions';\r\nimport { fetchGenresApi } from '../actions/genre-actions';\r\n\r\n\r\nconst buttonDefaultStyles = {\r\n  backgroundColor: '#fff',\r\n  border: 'none',\r\n  cursor: 'pointer',\r\n  outline: 'none',\r\n}\r\n\r\nclass BookForm extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modalOpen: false,\r\n      data: {\r\n        id: shortid.generate(),\r\n        title: '',\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.fetchGenresApi();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.data !== this.props.data) {\r\n      if (this.props.data === undefined) {\r\n        this.setState({\r\n          data: this.emptyForm()\r\n        })\r\n      } else {\r\n        this.setState({\r\n          data: this.props.data,\r\n          modalOpen: true,\r\n        })\r\n      }\r\n      \r\n    }\r\n    if (prevProps.editBookId === null || this.state.data === undefined) {\r\n      this.setState({\r\n        data: this.emptyForm(),\r\n      });\r\n    } else if (prevProps.editBookId !== this.props.editBookId) {\r\n      this.setState({\r\n        editBookId: this.props.editBookId\r\n      })\r\n    }\r\n    if (prevProps.modalOpen !== this.props.modalOpen) {\r\n      this.setState({\r\n        modalOpen: !this.state.modalOpen,\r\n      });\r\n    }\r\n  }\r\n\r\n  emptyForm() {\r\n    const data = {\r\n      id: shortid.generate(),\r\n      title: '',\r\n      author: '',\r\n      country: '',\r\n      genre: '',\r\n      year: null,\r\n      publisher: '',\r\n      isbn: '',\r\n      edition: '',\r\n      price: ''\r\n    }\r\n    return data;\r\n  }\r\n\r\n  handleChange = (e, { name, value }) => {\r\n    if (!name) {\r\n      this.matchGenre()\r\n    }\r\n    const bookData = Object.assign(this.state.data, {\r\n      [name]: value\r\n    });\r\n    this.setState({ data: bookData });\r\n  }\r\n\r\n  handleSubmit = () => {\r\n    if (this.state.editBookId) {\r\n      this.props.updateBook(this.state.data)\r\n      .then(book => {\r\n        console.log('successful book update', book);\r\n        this.setState({ modalOpen: false, messageOpen: true, messageText: 'successful book update' });\r\n\r\n      })\r\n    } else {\r\n      this.props.createBook(this.state.data)\r\n      .then(book => {\r\n        console.log('successful book create', book);\r\n        this.setState({ modalOpen: false });\r\n      })\r\n    }\r\n  }\r\n\r\n  composeTitle() {\r\n    let title;\r\n    if (this.props.data) {\r\n      title = 'Edit book'\r\n    } else {\r\n     title = 'New book'\r\n    }\r\n    return title;\r\n  }\r\n\r\n  render() {\r\n    const addNewButton =\r\n      <button onClick={() => this.setState({ modalOpen: true, data: this.emptyForm(), editBookId: null })} style={buttonDefaultStyles} >\r\n        <Icon name=\"plus square\" color=\"green\" /> Add new\r\n      </button>;\r\n    return (\r\n      <Transition duration={500}>\r\n        <Modal trigger={addNewButton} open={this.state.modalOpen} onClose={() => this.setState({ modalOpen: false })} closeIcon>\r\n          <Header icon='file text outline' content={this.composeTitle()} />\r\n          <Modal.Content>\r\n            <Form id=\"newbook\" onSubmit={this.handleSubmit}>\r\n              <Form.Field>\r\n                <Input autoFocus type=\"text\" name=\"title\" placeholder=\"book title\" onChange={this.handleChange} value={this.state.data.title} />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <Input autoFocus type=\"text\" name=\"author\" placeholder=\"Book author\" onChange={this.handleChange} value={this.state.data.author} />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <Input autoFocus type=\"text\" name=\"country\" placeholder=\"Country\" onChange={this.handleChange} value={this.state.data.country} />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <Input autoFocus type=\"text\" name=\"isbn\" placeholder=\"ISBN code\" onChange={this.handleChange} value={this.state.data.isbn} />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <Dropdown name=\"genre\" placeholder=\"Choose genre\" search selection options={this.props.genres} onChange={this.handleChange} value={this.state.data.genre} />\r\n              </Form.Field>\r\n            </Form>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button form=\"newbook\" type=\"submit\" color='green'>\r\n              <Icon name='save' /> Save\r\n              </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      </Transition>\r\n    )\r\n  }\r\n}\r\n\r\nBookForm.propTypes = {\r\n  title: PropTypes.string,\r\n  author: PropTypes.string,\r\n  country: PropTypes.string,\r\n  genre: PropTypes.string,\r\n  year: PropTypes.number,\r\n  publisher: PropTypes.string,\r\n  isbn: PropTypes.string,\r\n  edition: PropTypes.string,\r\n  price: PropTypes.string\r\n};\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n  const obj = {\r\n    genres: state.genres,\r\n    data: ownProps.data,\r\n    openNotification: state.openNotification,\r\n    textNotification: state.textNotification\r\n  }\r\n  return obj;\r\n}\r\n\r\nexport default connect(mapStateToProps, { createBook, fetchGenresApi, fetchBookApi, updateBook })(BookForm);","/* eslint-disable */\r\n\r\nimport React, { Component } from 'react';\r\nimport { Dropdown } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport shortid from 'shortid';\r\n\r\nimport { fetchGenresApi } from '../actions/genre-actions';\r\n\r\nclass FilterGenres extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {}\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.props.fetchGenresApi();\r\n    }\r\n\r\n    handleChange = (e, { value }) => {\r\n        this.setState({ value });\r\n        this.props.updateListing(value);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dropdown\r\n                name=\"genre\"\r\n                placeholder=\"Choose genre\"\r\n                search\r\n                selection\r\n                options={this.props.genres}\r\n                onChange={this.handleChange}\r\n                value={this.state.value} />\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, props) {\r\n    return {\r\n      genres: state.genres\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps, { fetchGenresApi })(FilterGenres);","/* eslint-disable */\r\n\r\nimport React, { Component } from 'react';\r\nimport { Loader, Button } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport shortid from 'shortid';\r\n\r\nimport { fetchBooksApi, deleteBook } from '../actions/book-actions';\r\nimport Listing from '../components/Listing';\r\nimport BookForm from '../components/BookForm';\r\nimport FilterGenres from '../components/FilterGenres';\r\n\r\nconst thead = ['TITLE', 'AUTHOR', 'COUNTRY', 'GENRE', 'PRICE', 'ACTIONS'];\r\n\r\nclass Books extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    this.handleDelete = this.handleDelete.bind(this);\r\n    this.handleEdit = this.handleEdit.bind(this);\r\n    this.updateListing = this.updateListing.bind(this);\r\n    this.resetFilter = this.resetFilter.bind(this);\r\n  }\r\n\r\n\r\n  componentDidMount = () => {\r\n    this.props.fetchBooksApi();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.books !== this.props.books) {\r\n      this.setState({ books: this.props.books })\r\n    }\r\n  }\r\n\r\n  handleDelete = (id) => {\r\n    this.props.deleteBook(id).then(res => {\r\n      console.log('book deleted!!', res);\r\n      this.props.fetchBooksApi();\r\n    })\r\n  }\r\n\r\n  handleEdit(id) {\r\n    this.setState({ editBookId: id, books: this.props.books, modalOpen: !this.state.modalOpen });\r\n  }\r\n\r\n  updateListing(value) {\r\n    const books = this.props.books;\r\n    const filteredBooks = books.filter(book => {\r\n      return book.genre === value;\r\n    })\r\n    console.log(filteredBooks);\r\n    this.setState({ books: filteredBooks })\r\n  }\r\n\r\n  resetFilter() {\r\n    // this.setState({ books: this.props.books })\r\n  }\r\n\r\n  render() {\r\n    if (this.props.books.length === 0) {\r\n      return (\r\n        <Loader active inline='centered' />\r\n      )\r\n    } else {\r\n      const data = this.state.books || this.props.books;\r\n      const editBook = data.findIndex(x => x.id === this.state.editBookId) !== -1 ? data.findIndex(x => x.id === this.state.editBookId) : {};\r\n      const singleBook = editBook ? data[editBook] : null;\r\n      return (\r\n        <div>\r\n          <BookForm data={data[editBook]} editBookId={this.state.editBookId} modalOpen={this.state.modalOpen}/>\r\n          <FilterGenres updateListing={this.updateListing}/>\r\n          {/* <Button onClick={this.resetFilter()}>Reset Filter</Button> */}\r\n          <Listing thead={thead} data={data} handleEdit={this.handleEdit} handleDelete={this.handleDelete} />\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state, props) {\r\n  if (state.books) {\r\n    return {\r\n      books: state.books\r\n    }\r\n  }\r\n  \r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchBooksApi, deleteBook })(Books);","/* eslint-disable */\r\n\r\nimport React, { Component } from 'react';\r\nimport { Modal, Header, Button, Icon, Transition, Form, Input, Dropdown } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport shortid from 'shortid';\r\nimport PropTypes from 'prop-types';\r\nimport { fetchGenresApi, createGenre, fetchGenreApi, updateGenre } from '../actions/genre-actions';\r\n\r\n\r\nconst buttonDefaultStyles = {\r\n  backgroundColor: '#fff',\r\n  border: 'none',\r\n  cursor: 'pointer',\r\n  outline: 'none',\r\n}\r\n\r\nclass GenreForm extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modalOpen: false,\r\n      editGenreId: null,\r\n      data: {\r\n        id: shortid.generate(),\r\n        title: '',\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.fetchGenresApi();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.data !== this.props.data) {\r\n      this.setState({\r\n        data: this.props.data,\r\n        modalOpen: true\r\n      })\r\n    }\r\n    if (prevProps.editGenreId === null || this.state.data === undefined) {\r\n      this.setState({\r\n        data: this.emptyForm(),\r\n      });\r\n    } else if (prevProps.editBookId !== this.props.editBookId) {\r\n      this.setState({\r\n        editBookId: this.props.editBookId\r\n      })\r\n    }\r\n    if (prevProps.modalOpen !== this.props.modalOpen) {\r\n      this.setState({\r\n        modalOpen: !this.state.modalOpen,\r\n      });\r\n    }\r\n  }\r\n\r\n  emptyForm() {\r\n    return {\r\n      id: shortid.generate(),\r\n      title: '',\r\n      author: '',\r\n      country: '',\r\n      genre: '',\r\n      year: null,\r\n      publisher: '',\r\n      isbn: '',\r\n      edition: '',\r\n      price: ''\r\n    }\r\n  }\r\n\r\n  handleChange = (e, { name, value }) => {\r\n    if (!name) {\r\n      name = e.target.name;\r\n      value = e.target.value;\r\n    }\r\n    const genreData = Object.assign(this.state.data, {\r\n      [name]: value\r\n    });\r\n    this.setState({ data: genreData });\r\n  }\r\n\r\n  handleSubmit = () => {\r\n    if (this.state.editBookId) {\r\n      this.props.updateGenre(this.state.data)\r\n      .then(book => {\r\n        console.log('successful book update', book);\r\n        this.setState({ modalOpen: false });\r\n\r\n      })\r\n    } else {\r\n      this.props.createGenre(this.state.data)\r\n        .then(genre => {\r\n          console.log('successful genre submit', genre);\r\n          this.setState({ modalOpen: false });\r\n\r\n        })\r\n    }\r\n  }\r\n\r\n  composeTitle() {\r\n    let title;\r\n    if (this.props.data) {\r\n      title = 'Edit genre'\r\n    } else {\r\n      title = 'New genre'\r\n    }\r\n    return title;\r\n  }\r\n\r\n  render() {\r\n    const addNewButton =\r\n      <button onClick={() => this.setState({ modalOpen: true, data: this.emptyForm(), editBookId: null })} style={buttonDefaultStyles} >\r\n        <Icon name=\"plus square\" color=\"green\" /> Add new genre\r\n      </button>;\r\n\r\n    return (\r\n      <Transition duration={500}>\r\n        <Modal trigger={addNewButton} open={this.state.modalOpen} onClose={() => this.setState({ modalOpen: false, data: this.emptyForm() })} closeIcon>\r\n          <Header icon='file text outline' content={this.composeTitle()} />\r\n          <Modal.Content>\r\n            <Form id=\"newgenre\" onSubmit={this.handleSubmit}>\r\n              <Form.Field>\r\n                <Input autoFocus type=\"text\" name=\"text\" placeholder=\"Genre name\" onChange={this.handleChange} value={this.state.data.text} />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <Input autoFocus type=\"text\" name=\"value\" placeholder=\"Value\" onChange={this.handleChange} value={this.state.data.value} />\r\n              </Form.Field>\r\n            </Form>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button form=\"newgenre\" type=\"submit\" color='green'>\r\n              <Icon name='save' /> Save\r\n              </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      </Transition>\r\n    )\r\n  }\r\n}\r\n\r\nGenreForm.propTypes = {\r\n  text: PropTypes.string,\r\n  value: PropTypes.string,\r\n  key: PropTypes.number,\r\n};\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n  const obj = {\r\n    genres: state.genres,\r\n    data: ownProps.data,\r\n    editGenreId: ownProps.editGenreId\r\n  }\r\n  return obj;\r\n}\r\n\r\nexport default connect(mapStateToProps, { createGenre, fetchGenresApi, fetchGenreApi, updateGenre })(GenreForm);","/* eslint-disable */\r\n\r\nimport React, { Component } from 'react';\r\nimport { Loader, Divider } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\nimport shortid from 'shortid';\r\n\r\nimport { fetchGenresApi, createGenre, deleteGenre } from '../actions/genre-actions';\r\nimport GenreForm from '../components/GenreForm';\r\nimport Listing from '../components/Listing';\r\n\r\nconst thead = ['TEXT', 'VALUE', 'DATE'];\r\n\r\nclass Genres extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    this.handleDelete = this.handleDelete.bind(this);\r\n    this.handleEdit = this.handleEdit.bind(this);\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.props.fetchGenresApi();\r\n  }\r\n  \r\n  handleDelete = (id) => {\r\n    this.props.deleteGenre(id).then(res => {\r\n      console.log('genre deleted!!', res);\r\n      this.props.fetchGenresApi();\r\n    })\r\n  }\r\n  handleEdit(id) {\r\n    // console.log('edit::', id);\r\n    this.setState({ editGenreId: id, genres: this.props.genres, modalOpen: !this.state.modalOpen });\r\n  }\r\n\r\n\r\n  render() {\r\n    if (this.props.genres.length === 0) {\r\n      return (\r\n        <Loader active inline='centered' />\r\n      )\r\n    } else {\r\n      const data = this.props.genres;\r\n      const editGenre = data ? this.props.genres.findIndex(x => x.id === this.state.editGenreId) : null;\r\n      const singleGenre = editGenre ? this.props.genres[editGenre] : null;\r\n      return (\r\n        <div>\r\n          <GenreForm data={this.props.genres[editGenre]} editBookId={this.state.editGenreId} modalOpen={this.state.modalOpen}></GenreForm>\r\n          <Listing thead={thead} data={data} handleEdit={this.handleEdit} handleDelete={this.handleDelete} />\r\n        </div>\r\n      )\r\n    }\r\n\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state, props) {\r\n  return {\r\n    genres: state.genres\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchGenresApi, deleteGenre })(Genres);\r\n","import React, { Component } from 'react';\nimport { Route, Switch, BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport Reducer from './Reducer';\nimport Home from './pages/Home';\nimport Layout from './pages/Layout';\nimport Books from './pages/Books';\n\n\nimport 'semantic-ui-css/semantic.min.css';\nimport './App.css';\nimport Genres from './pages/Genres';\n\n\nconst store = createStore(\n  Reducer,\n  //persistedStore,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n);\n\n// App would be the equivalent to a Routes.js file here\n\nclass App extends Component {\n  constructor(p) {\n    super(p);\n    this.state = {}\n    this.notify = this.notify.bind(this);\n  }\n\n  notify(status) {\n    console.log(status)\n    /*this.setState({status: status})*/\n  }\n\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <Switch>\n            <Layout>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/library\" component={Books} />\n              <Route exact path=\"/genres\" component={Genres} />\n              {/* <Route path=\"/book/:id\" component={Detail}/>   */}\n            </Layout>\n          </Switch>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}